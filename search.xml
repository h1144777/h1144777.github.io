<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>HTML CSS複習整理-基本標籤meta</title>
      <link href="/2020/03/01/200301-CSS%E8%A4%87%E7%BF%92%E6%95%B4%E7%90%86-%E5%9F%BA%E6%9C%AC%E6%A8%99%E7%B1%A4/"/>
      <url>/2020/03/01/200301-CSS%E8%A4%87%E7%BF%92%E6%95%B4%E7%90%86-%E5%9F%BA%E6%9C%AC%E6%A8%99%E7%B1%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="參考來源"><a href="#參考來源" class="headerlink" title="參考來源:"></a>參考來源:</h2><a href="https://www.jinzdm.org/meta-description-keywords/" target="_blank" rel="noopener">SEO網站優化教學 2-1如何被收錄-建立Meta Title,Description,Keywords</a><br/><a href="https://blog.xuite.net/jason_kuso/kuso/556995777-SEO+%E7%B6%B2%E7%AB%99%E6%90%9C%E5%B0%8B%E5%84%AA%E5%8C%96+-+%E4%B8%8D%E8%A6%81%E5%86%8D%E7%94%A8+Meta+Keywords+%E9%97%9C%E9%8D%B5%E5%AD%97%E4%BA%86%EF%BC%8C%E6%94%B9%E7%94%A8+Description+%E5%90%A7%EF%BC%81" target="_blank" rel="noopener">SEO 網站搜尋優化 - 不要再用 Meta Keywords 關鍵字了，改用 Description 吧！</a><br/><a href="https://developer.mozilla.org/zh-TW/docs/Web_%E9%96%8B%E7%99%BC/Historical_artifacts_to_avoid" target="_blank" rel="noopener">應該避免的過時語法</a><a id="more"></a><br/><a href="https://codertw.com/%E5%89%8D%E7%AB%AF%E9%96%8B%E7%99%BC/25320/" target="_blank" rel="noopener">HTML meta標籤常用屬性及其作用總結</a><br/><a href="https://www.itread01.com/content/1508757746.html" target="_blank" rel="noopener">【HTML】瀏覽器內核控制meta name="renderer" 說明文檔</a><br/><a href="http://www.flycan.com/article/rwd/meta-veiwport-1316.html" target="_blank" rel="noopener">使用 Veiwport 設定手機網頁的螢幕解析度</a><br/><br/><br/><br/><h2 id="關於meta元素"><a href="#關於meta元素" class="headerlink" title="關於meta元素"></a>關於meta元素</h2><p>meta元素可以定義文件的各種後設資料，提供各種文件資訊，通俗點說就是可以理解為提供了關於網站的各種資訊。html文件中可以包含多個meta元素，每個meta元素只能用於一種用途，如果想定義多個文件資訊，則需要在head標籤中新增多個meta元素。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">name</span>=<span class="string">"屬性值"</span> <span class="attribute">content</span>=<span class="string">"內容"</span>&gt;</span><br><span class="line"></span><br><span class="line">HTML meta name 常用屬性</span><br><span class="line"></span><br><span class="line">    <span class="attribute">name</span>=<span class="string">"description"</span> <span class="attribute">content</span>=<span class="string">"網頁簡短描述"</span></span><br><span class="line">    有機會顯示在搜尋結果的網頁摘要中</span><br><span class="line"></span><br><span class="line">    <span class="attribute">name</span>=<span class="string">"keywords"</span> <span class="attribute">content</span>=<span class="string">"關鍵字1.關鍵字2"</span></span><br><span class="line">    關鍵字標籤，但現在已少用(Google引擎已不使用此屬性)</span><br><span class="line"></span><br><span class="line">    <span class="attribute">name</span>=<span class="string">"author"</span> <span class="attribute">content</span>=<span class="string">"作者姓名"</span></span><br><span class="line">    記錄網頁的作者名稱</span><br><span class="line"></span><br><span class="line">    meta <span class="attribute">name</span>=<span class="string">"renderer"</span> <span class="attribute">content</span>=<span class="string">"webkit|ie-comp|ie-stand"</span></span><br><span class="line">    用於預設用哪種瀏覽器核心渲染版面</span><br><span class="line"></span><br><span class="line">    <span class="attribute">name</span>=<span class="string">"generator"</span> <span class="attribute">content</span>=<span class="string">"編輯器名稱"</span></span><br><span class="line">    記錄網頁編輯器名稱</span><br><span class="line"></span><br><span class="line">    <span class="attribute">name</span>=<span class="string">"copyright"</span> <span class="attribute">content</span>=<span class="string">"網頁版權"</span></span><br><span class="line">    用來標示網頁的版權或著作權聲明</span><br><span class="line"></span><br><span class="line">    <span class="attribute">name</span>=<span class="string">"distribution"</span> <span class="attribute">content</span>=<span class="string">"網頁發佈地區"</span></span><br><span class="line">    用來記錄網頁的發佈地區</span><br><span class="line"></span><br><span class="line">    <span class="attribute">name</span>=<span class="string">"viewport"</span> <span class="attribute">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span></span><br><span class="line">    設定手機網頁的螢幕解析度</span><br><span class="line">    註1:設定為 <span class="attribute">width</span>=device-width 就可以自動符合所有不同手機的預設最佳解析度</span><br><span class="line">    註2:設定  <span class="attribute">initial-scale</span>=1  手機螢幕畫面的初始縮放比例為 100%</span><br></pre></td></tr></table></figure><p>每個 meta 使用 name 的時候，都會搭配 content 來呈現資訊內容，簡單來說，name 代表資訊項目，content 代表資訊值。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">http-equiv</span>=<span class="string">"屬性值"</span> <span class="attribute">content</span>=<span class="string">"內容"</span>&gt;</span><br><span class="line">HTML5中能使用的屬性</span><br><span class="line">    <span class="attribute">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attribute">content</span>=<span class="string">"text/html"</span>; <span class="attribute">charset</span>=<span class="string">"uft-8″ </span></span><br><span class="line"><span class="string">    網頁內容的種類以及編碼</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    http-equiv="</span>Refresh" <span class="attribute">content</span>=<span class="string">"time"</span> </span><br><span class="line">    指定一個時間間隔(以秒為單位),在此時間過去之後從伺服器重新載入當前頁面,也可以另外指定一個頁面</span><br><span class="line">    </span><br><span class="line">    <span class="attribute">http-equiv</span>=<span class="string">"default-style"</span> <span class="attribute">content</span>=<span class="string">"text/css"</span></span><br><span class="line">    定義預設的樣式表</span><br></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">charset</span>=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">網頁編碼，UTF-8是萬國碼</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 複習 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>200222-類別物件基本概念</title>
      <link href="/2020/02/22/200222-%E9%A1%9E%E5%88%A5%E7%89%A9%E4%BB%B6%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/"/>
      <url>/2020/02/22/200222-%E9%A1%9E%E5%88%A5%E7%89%A9%E4%BB%B6%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</url>
      
        <content type="html"><![CDATA[<h2 id="參考網站"><a href="#參考網站" class="headerlink" title="參考網站:"></a>參考網站:</h2><a href="https://training.pada-x.com/online_premium.htm" target="_blank" rel="noopener">彭彭課程-類別物件 (Youtube會員)<a/>  <a id="more"></a><br/><br/><br/><h2 id="基本觀念"><a href="#基本觀念" class="headerlink" title="基本觀念"></a>基本觀念</h2><p>類別:設計圖。<br>物件:根據設計圖製造出來的實體。<br>例如一個展示盒的設計圖，可以用來產生無數個實體展示盒。<br>換句話說，一個類別設計，可以用來產生無數個物件實體。<br>基本類別設計會用到的關鍵字:class,constructor<br>產生物件實體會用到的關鍵字:new<br>物件實體以類別設計為基礎，但會依不同需求使內容有所差異。</p><h2 id="定義類別並產生物件"><a href="#定義類別並產生物件" class="headerlink" title="定義類別並產生物件"></a>定義類別並產生物件</h2><p>定義類別:</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> 類別名稱</span>&#123;&#125;    <span class="comment">//*註:先有類別才能建立物件</span></span><br></pre></td></tr></table></figure><p>建立物件:</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="type"></span>類別名稱()</span><br></pre></td></tr></table></figure><p>例如:</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定義一個類別</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">Car</span>&#123;&#125; </span><br><span class="line"><span class="comment">//利用定義好的類別產生新物件，並放進變數中</span></span><br><span class="line"><span class="keyword">let</span> car1=<span class="keyword">new</span> Car()</span><br></pre></td></tr></table></figure><h2 id="定義建構式-Constructor"><a href="#定義建構式-Constructor" class="headerlink" title="定義建構式(Constructor)"></a>定義建構式(Constructor)</h2><p>在類別中定義建構式:</p><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">constructor</span><span class="params">(參數列表)</span><span class="comment">&#123;</span></span></span><br><span class="line"><span class="function"><span class="comment">    建構式的內部程式</span></span></span><br><span class="line"><span class="function"><span class="comment">&#125;</span></span></span><br></pre></td></tr></table></figure><p>例如:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Car</span></span>&#123;               <span class="comment">//定義一個類別</span></span><br><span class="line">    <span class="keyword">constructor</span>()&#123;       <span class="comment">//在類別中定義建構式</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"建構式被呼叫"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//利用已經定義的類別產生新物件</span></span><br><span class="line"><span class="keyword">let</span> car1=<span class="keyword">new</span> Car();  <span class="comment">//呼叫建構式，產生新物件</span></span><br></pre></td></tr></table></figure><p>建構式:建立新物件時被呼叫的函式，若是沒特別寫，Javascript會內建<br>空白建構式constructor(){}，使程式可以運作。</p><h2 id="定義、存取屬性-Attribute"><a href="#定義、存取屬性-Attribute" class="headerlink" title="定義、存取屬性(Attribute)"></a>定義、存取屬性(Attribute)</h2><p>屬性:用來描述物件的個別差異。<br>在建構式中建立屬性:</p><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">constructor</span><span class="params">(參數列表)</span><span class="comment">&#123;</span></span></span><br><span class="line"><span class="function"><span class="comment">    this.屬性名稱=初始資料;</span></span></span><br><span class="line"><span class="function"><span class="comment">&#125;</span></span></span><br></pre></td></tr></table></figure><p>例如:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Car</span></span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>()&#123;</span><br><span class="line">        <span class="keyword">this</span>.color=<span class="string">"red"</span>;   <span class="comment">//建立新屬性color，資料為red。</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//利用已經定義的類別產生新物件</span></span><br><span class="line"><span class="keyword">let</span> car1=<span class="keyword">new</span> Car();  <span class="comment">//新物件擁有color屬性，資料為red。</span></span><br></pre></td></tr></table></figure><p>也可透過參數，彈性的在建立物件時提供資料:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Car</span></span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(color)&#123;</span><br><span class="line">        <span class="keyword">this</span>.color=color;   </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//利用已經定義的類別產生新物件</span></span><br><span class="line"><span class="keyword">let</span> car1=<span class="keyword">new</span> Car(<span class="string">"blue"</span>);  <span class="comment">//新物件擁有color屬性，資料為blue。</span></span><br><span class="line"><span class="keyword">let</span> car2=<span class="keyword">new</span> Car(<span class="string">"green"</span>);  <span class="comment">//新物件擁有color屬性，資料為green。</span></span><br></pre></td></tr></table></figure><p>存取物件屬性:</p><figure class="highlight fix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">物件.屬性名稱</span></span><br><span class="line"><span class="attr">物件.屬性名稱</span>=<span class="string">新的資料</span></span><br></pre></td></tr></table></figure><p>例如:</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">class Car&#123;</span><br><span class="line">    constructor(<span class="built_in">color</span>)&#123;</span><br><span class="line">        <span class="keyword">this</span>.<span class="built_in">color</span>=<span class="built_in">color</span>;   </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">let car1=<span class="keyword">new</span> Car(<span class="string">"blue"</span>);  <span class="comment">//新物件擁有color屬性，資料為blue。</span></span><br><span class="line">console.<span class="built_in">log</span>(car1.<span class="built_in">color</span>);   <span class="comment">//取得屬性資料，印出blue</span></span><br><span class="line">car1.<span class="built_in">color</span>=<span class="string">"red"</span>;          <span class="comment">//更新屬性資料</span></span><br><span class="line">console.<span class="built_in">log</span>(car1.<span class="built_in">color</span>);   <span class="comment">//取得新的屬性物件，印出red</span></span><br></pre></td></tr></table></figure><h2 id="定義、呼叫方法-Method"><a href="#定義、呼叫方法-Method" class="headerlink" title="定義、呼叫方法(Method)"></a>定義、呼叫方法(Method)</h2><p>方法:用來描述物件可以做的事，與物件綁定的函式。<br>換句話說，方法就是綁定在物件上面的函式。</p><p>在類別中建立方法:</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">方法的名稱(參數列表)</span><span class="template-variable">&#123;</span></span><br><span class="line"><span class="template-variable">    內部的程式碼</span></span><br><span class="line"><span class="template-variable">&#125;</span></span><br></pre></td></tr></table></figure><p>例如:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Car</span></span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(color)&#123;</span><br><span class="line">        <span class="keyword">this</span>.color=color;   </span><br><span class="line">    &#125;</span><br><span class="line">    run()&#123;      <span class="comment">//定義一個run方法，透過物件呼叫並執行內部程式碼。</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"Running"</span>);   </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> car1=<span class="keyword">new</span> Car(<span class="string">"blue"</span>)  <span class="comment">//產生新物件，物件擁有color屬性與run方法。</span></span><br></pre></td></tr></table></figure><p>呼叫物件方法:</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">物件.方法名稱<span class="comment">(參數資料)</span></span><br></pre></td></tr></table></figure><p>例如:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Car</span></span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(color)&#123;</span><br><span class="line">        <span class="keyword">this</span>.color=color;   </span><br><span class="line">    &#125;</span><br><span class="line">    run()&#123;      <span class="comment">//定義一個run方法，透過物件呼叫並執行內部程式碼。</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"Running"</span>);   </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> car1=<span class="keyword">new</span> Car(<span class="string">"blue"</span>)  <span class="comment">//產生新物件，物件擁有color屬性與run方法。</span></span><br><span class="line">car1.run();  <span class="comment">//呼叫run方法，執行run內部程式，印出Running。</span></span><br></pre></td></tr></table></figure><p>在物件方法中使用this代表綁定物件:</p><p>例如:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Car</span></span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(color)&#123;</span><br><span class="line">        <span class="keyword">this</span>.color=color;   </span><br><span class="line">    &#125;</span><br><span class="line">    run()&#123;     </span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"Car"</span>+<span class="keyword">this</span>.color+<span class="string">"Running"</span>);   </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> car1=<span class="keyword">new</span> Car(<span class="string">"blue"</span>)  </span><br><span class="line">car1.run();  <span class="comment">//印出 Car blue Running</span></span><br></pre></td></tr></table></figure><h2 id="物件屬性、方法的綜合操作"><a href="#物件屬性、方法的綜合操作" class="headerlink" title="物件屬性、方法的綜合操作"></a>物件屬性、方法的綜合操作</h2><p>以車輛做為比喻:</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">class Car&#123;</span><br><span class="line">    construtcor(color)&#123;               <span class="comment">//建構式</span></span><br><span class="line">        this.color=color;</span><br><span class="line">        this.<span class="built_in">speed</span>=<span class="number">0</span>;                 <span class="comment">//初始資料，車輛的初始速度為0</span></span><br><span class="line">    &#125;</span><br><span class="line">    run(<span class="built_in">speed</span>)&#123;                       <span class="comment">//方法</span></span><br><span class="line">        this.<span class="built_in">speed</span>=<span class="built_in">speed</span>;             <span class="comment">//更新車輛速度(給予資料彈性輸入)</span></span><br><span class="line">        console.<span class="built_in">log</span>(<span class="string">"Car"</span>+this.color+<span class="string">"Running at"</span>+this.<span class="built_in">speed</span>+<span class="string">"KM/HR"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">stop</span>()&#123;</span><br><span class="line">        this.<span class="built_in">speed</span>=<span class="number">0</span>;                 <span class="comment">//更新車輛速度</span></span><br><span class="line">        console.<span class="built_in">log</span>(<span class="string">"Car"</span>+this.color+<span class="string">"stopped);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">let car1=new Car("</span>blue<span class="string">");             //產生新物件並放入變數中</span></span><br><span class="line"><span class="string">car1.run(50);                         //印出Car blue Running at 50KM/HR</span></span><br><span class="line"><span class="string">car1.stop();                          //印出 Car blue stopped</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 學習紀錄 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>200219-參數的預設值</title>
      <link href="/2020/02/19/200219-ES6-%E5%8F%83%E6%95%B8%E7%9A%84%E9%A0%90%E8%A8%AD%E5%80%BC/"/>
      <url>/2020/02/19/200219-ES6-%E5%8F%83%E6%95%B8%E7%9A%84%E9%A0%90%E8%A8%AD%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<h2 id="參考網站"><a href="#參考網站" class="headerlink" title="參考網站:"></a>參考網站:</h2><a href=" https://training.pada-x.com/online_premium.htm" target="_blank" rel="noopener">彭彭課程-參數預設值 (Youtube會員)<a/><br/><a href="https://ithelp.ithome.com.tw/articles/10213774" target="_blank" rel="noopener">函式參數預設值 - 基礎範例<a/><a id="more"></a><h2 id="原有方式"><a href="#原有方式" class="headerlink" title="原有方式"></a>原有方式</h2><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show</span><span class="params">(message)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> message===<span class="string">"undefined"</span>)&#123;  <span class="comment">//未給定message資料</span></span><br><span class="line">        message=<span class="string">"預設值"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    alert(message);</span><br><span class="line">&#125;</span><br><span class="line">show(<span class="string">"Hello"</span>); <span class="comment">//顯示Hello</span></span><br><span class="line">show();  <span class="comment">//顯示預設值</span></span><br></pre></td></tr></table></figure><h2 id="ES6的作法"><a href="#ES6的作法" class="headerlink" title="ES6的作法"></a>ES6的作法</h2><p>若未給定message資料，直接採用=後方指定的資料</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function <span class="keyword">show</span>(message=<span class="string">"預設值"</span>)&#123;</span><br><span class="line">    <span class="built_in">alert</span>(message);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">show</span>(<span class="string">"Hello"</span>); <span class="comment">//顯示Hello</span></span><br><span class="line"><span class="keyword">show</span>();  <span class="comment">//顯示預設值</span></span><br></pre></td></tr></table></figure><p>也可使用箭頭函式:</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">let <span class="keyword">show</span>=(message=<span class="string">"預設值"</span>)=&gt;&#123;</span><br><span class="line">    alert(message);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">show</span>(<span class="string">"Hello"</span>); <span class="comment">//顯示Hello</span></span><br><span class="line"><span class="keyword">show</span>();  <span class="comment">//顯示預設值</span></span><br></pre></td></tr></table></figure><h2 id="範例一"><a href="#範例一" class="headerlink" title="範例一:"></a>範例一:</h2><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">multiply</span><span class="params">(n1, n2=1)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> n1*n2;</span><br><span class="line">&#125;</span><br><span class="line">multiply(<span class="number">3</span>,<span class="number">4</span>); <span class="comment">//回傳12</span></span><br><span class="line">multiply(<span class="number">5</span>); <span class="comment">//回傳5</span></span><br></pre></td></tr></table></figure><h2 id="範例一-箭頭函式"><a href="#範例一-箭頭函式" class="headerlink" title="範例一 箭頭函式:"></a>範例一 箭頭函式:</h2><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">let multiply=(n1,n2=<span class="number">1</span>)=&gt;(n1*n2);  <span class="comment">//註:箭頭函式後方不用加上return,使用小括號會直接回傳</span></span><br><span class="line">multiply(<span class="number">3</span>,<span class="number">4</span>); <span class="comment">//回傳12</span></span><br><span class="line">multiply(<span class="number">5</span>); <span class="comment">//回傳5</span></span><br></pre></td></tr></table></figure><h2 id="範例二-後面的參數可使用前面的參數名稱"><a href="#範例二-後面的參數可使用前面的參數名稱" class="headerlink" title="範例二:後面的參數可使用前面的參數名稱"></a>範例二:後面的參數可使用前面的參數名稱</h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">combine</span>(first=<span class="string">"Louie"</span>,last=<span class="string">"Chen"</span>,name=first+<span class="string">" "</span>+last)&#123;</span><br><span class="line">    <span class="selector-tag">alert</span>(name);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">combine</span>(<span class="string">"祥祥"</span>,<span class="string">"陳"</span>); <span class="comment">//顯示祥祥 陳</span></span><br><span class="line"><span class="selector-tag">combine</span>(<span class="string">"祥祥"</span>);  <span class="comment">//顯示 祥祥 Chen</span></span><br><span class="line"><span class="selector-tag">combine</span>();  <span class="comment">//顯示Louie Chen</span></span><br></pre></td></tr></table></figure><h2 id="範例二-箭頭函數"><a href="#範例二-箭頭函數" class="headerlink" title="範例二:箭頭函數"></a>範例二:箭頭函數</h2><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">let</span> combibe=(<span class="built_in">first</span>=<span class="string">"Louie"</span>,<span class="built_in">last</span>=<span class="string">"Chen"</span>,name=<span class="built_in">first</span>+<span class="string">" "</span>+<span class="built_in">last</span>)=&gt;&#123;</span><br><span class="line">    alert(name);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">combine</span>(<span class="string">"祥祥"</span>,<span class="string">"陳"</span>); //顯示祥祥 陳</span><br><span class="line"><span class="built_in">combine</span>(<span class="string">"祥祥"</span>);  //顯示 祥祥 Chen</span><br><span class="line"><span class="built_in">combine</span>();  //顯示Louie Chen</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 學習紀錄 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript ES6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>200216-學習紀錄-ES6-箭頭函式基本認識</title>
      <link href="/2020/02/16/200216-%E7%AE%AD%E9%A0%AD%E5%87%BD%E5%BC%8F%E5%9F%BA%E6%9C%AC%E8%AA%8D%E8%AD%98/"/>
      <url>/2020/02/16/200216-%E7%AE%AD%E9%A0%AD%E5%87%BD%E5%BC%8F%E5%9F%BA%E6%9C%AC%E8%AA%8D%E8%AD%98/</url>
      
        <content type="html"><![CDATA[<h2 id="參考網站"><a href="#參考網站" class="headerlink" title="參考網站:"></a>參考網站:</h2><a href="https://eyesofkids.gitbooks.io/javascript-start-from-es6/content/part4/arrow_function.html" target="_blank" rel="noopener">1. 箭頭函式</a><br/><a href="https://wcc723.github.io/javascript/2017/12/21/javascript-es6-arrow-function/" target="_blank" rel="noopener">2. 鐵人賽：箭頭函式 (Arrow functions)</a> <br/><a href="https://training.pada-x.com/online_premium.htm" target="_blank" rel="noopener">3. 彭彭課程-箭頭函式 (Youtube會員)</a> <a id="more"></a> <br/> <br/> <br/><h2 id="1-參數列表-gt-回傳值"><a href="#1-參數列表-gt-回傳值" class="headerlink" title="1.(參數列表)=&gt;(回傳值)"></a>1.(參數列表)=&gt;(回傳值)</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//傳統的函式宣告</span></span><br><span class="line"><span class="keyword">let</span> add=<span class="function"><span class="keyword">function</span>(<span class="params">n1+n2</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> n1+n2;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//箭頭函式的寫法1</span></span><br><span class="line"><span class="keyword">let</span> add=<span class="function">(<span class="params">n1,n2</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> n1+n2;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="2-參數列表-gt-函式內部程式"><a href="#2-參數列表-gt-函式內部程式" class="headerlink" title="2.(參數列表)=&gt;{函式內部程式}"></a>2.(參數列表)=&gt;{函式內部程式}</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//傳統的函示宣告</span></span><br><span class="line"><span class="keyword">let</span> add=<span class="function"><span class="keyword">function</span>(<span class="params">n1+n2</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> n1+n2;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//箭頭函式的寫法2</span></span><br><span class="line"><span class="keyword">let</span> add=<span class="function">(<span class="params">n1,n2</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> n1+n2;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="延伸範例"><a href="#延伸範例" class="headerlink" title="延伸範例:"></a>延伸範例:</h2><p>1.<br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> f=<span class="function"><span class="params">()</span>=&gt;</span>(<span class="number">5</span>);    <span class="comment">//f=5</span></span><br><span class="line"><span class="keyword">let</span> result=f();   <span class="comment">//回傳5放進result中</span></span><br><span class="line"><span class="built_in">console</span>.log(result);  </span><br><span class="line"><span class="comment">//請問result變數中的資料是?</span></span><br><span class="line"><span class="comment">//result=5</span></span><br></pre></td></tr></table></figure><br>2.<br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> f=<span class="function">(<span class="params">message</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(message);   <span class="comment">//目前會顯示undifined 因為沒有回傳值</span></span><br><span class="line">&#125;;</span><br><span class="line">f(<span class="string">"Hello,Arrow"</span>);</span><br><span class="line"><span class="comment">//請問呼叫f函式之後的效果是?  </span></span><br><span class="line"><span class="comment">//呼叫函式中，因為()內有加入資料,所以會回傳並透過console.log顯示 Hello,Arrow</span></span><br></pre></td></tr></table></figure></p><h2 id="匿名函式"><a href="#匿名函式" class="headerlink" title="匿名函式:"></a>匿名函式:</h2><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//在排程中使用<span class="string">"傳統方式"</span>撰寫<span class="string">"匿名函式"</span></span><br><span class="line">   setTimeout(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">       console.<span class="built_in">log</span>(<span class="string">"過了一秒"</span>);</span><br><span class="line">   &#125;,<span class="number">1000</span>);</span><br></pre></td></tr></table></figure><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">//</span>在排程中使用<span class="string">"箭頭函式"</span>，撰寫<span class="string">"匿名函式"</span></span><br><span class="line">   setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">       <span class="built_in">console</span>.log(<span class="string">"過了一秒"</span>);</span><br><span class="line">   &#125;,<span class="number">1000</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 學習紀錄 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript ES6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>200213-詳解let、const、var的差異 (JS ES6)</title>
      <link href="/2020/02/13/200213-%E8%A9%B3%E8%A7%A3let%E3%80%81const%E3%80%81var%E7%9A%84%E5%B7%AE%E7%95%B0/"/>
      <url>/2020/02/13/200213-%E8%A9%B3%E8%A7%A3let%E3%80%81const%E3%80%81var%E7%9A%84%E5%B7%AE%E7%95%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="參考網站"><a href="#參考網站" class="headerlink" title="參考網站:"></a>參考網站:</h2><a href="https://training.pada-x.com/online_premium.htm" target="_blank" rel="noopener">1. 彭彭課程-詳解let、const、var的差異 (Youtube會員)</a><a href="https://ithelp.ithome.com.tw/articles/10192677" target="_blank" rel="noopener">2. [ES6-重點紀錄] 宣告方式 let、const</a> <a href="https://eyesofkids.gitbooks.io/javascript-start-from-es6/content/part3/var_const_naming.html" target="_blank" rel="noopener">3. 變數與常數 </a> <a href="https://pjchender.blogspot.com/2017/01/const.html" target="_blank" rel="noopener">4. [筆記] JavaScript ES6 中使用 const 宣告常數</a> <a id="more"></a><br/><br/><br/><h2 id="var"><a href="#var" class="headerlink" title="var"></a>var</h2><p>使用var宣告變數，變數的scope(範圍)以函式區塊分界。<br>程式片段一:<br>    <figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for(<span class="name">var</span> i=0<span class="comment">;i&lt;3;i++)&#123;        </span></span><br><span class="line">    console.log(<span class="name">i</span>)          </span><br><span class="line">&#125;        </span><br><span class="line">console.log(<span class="name">i</span>)  //印出<span class="number">3</span></span><br></pre></td></tr></table></figure><br>雖然i宣告在for迴圈內，但for為判斷式，此程式片段都還是屬於在同一範圍，所以可以叫出i。</p><p>程式片段二:<br>    <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)&#123;        </span><br><span class="line">    <span class="built_in">console</span>.log(i)          </span><br><span class="line">   &#125;        </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(i)  <span class="comment">//錯誤，找不到變數i</span></span><br></pre></td></tr></table></figure><br>此程式片段有函式，函式內為一個scope，函式外為另一個scope，i宣告在函式內，所以函式外的<br>i找不到變數。    </p><hr><h2 id="let"><a href="#let" class="headerlink" title="let"></a>let</h2><p>使用let宣告變數，分界較嚴格，變數的scope以程式區塊(大括號)分界<br>程式片段一:<br>    <figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for(<span class="name">let</span> i=0<span class="comment">;i&lt;3;i++)&#123;        </span></span><br><span class="line">    console.log(<span class="name">i</span>)          </span><br><span class="line">&#125;        </span><br><span class="line">console.log(<span class="name">i</span>)  //錯誤 找不到變數i</span><br></pre></td></tr></table></figure><br>程式片段二:<br>    <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)&#123;        </span><br><span class="line">    <span class="built_in">console</span>.log(i)          </span><br><span class="line">   &#125;        </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(i)  <span class="comment">//錯誤，找不到變數i</span></span><br></pre></td></tr></table></figure><br>使用let宣告變數，不僅函式會產生區隔，連判斷式(ex:for…)也會產生新的scope</p><hr><h2 id="const"><a href="#const" class="headerlink" title="const"></a>const</h2><p>使用const宣告常數，常數的資料不能變動<br>例如:<br>    <figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var v=<span class="number">3</span>;</span><br><span class="line">v=<span class="string">"Hello World"</span>;  <span class="comment">//變數中的資料可變動</span></span><br><span class="line"></span><br><span class="line">let l;    <span class="comment">//宣告變數可以暫時不給資料</span></span><br><span class="line">l=<span class="number">0</span>;      <span class="comment">//變數中的資料可變動</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> x;  <span class="comment">//錯誤，常數宣告時一定要給資料</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> c=<span class="number">100</span>;  <span class="comment">//正確，宣告常數，同時給定資料</span></span><br><span class="line">c=<span class="number">50</span>;     <span class="comment">//錯誤，不能更動常數中的資料</span></span><br></pre></td></tr></table></figure></p><h2 id="使用-const-在宣告陣列或物件時需要留意的地方"><a href="#使用-const-在宣告陣列或物件時需要留意的地方" class="headerlink" title="使用 const 在宣告陣列或物件時需要留意的地方"></a>使用 const 在宣告陣列或物件時需要留意的地方</h2><p>1.當用const宣告常數，並用push推入一個陣列的值時，並不會有錯誤的情形。<br>  <figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">const arr= [<span class="string">"Hello"</span>, <span class="string">"h1144777"</span>]</span><br><span class="line">console.<span class="built_in">log</span>(arr);  // [<span class="string">"Hello"</span>, <span class="string">"h1144777"</span>]</span><br><span class="line"></span><br><span class="line">arr.<span class="built_in">push</span>(<span class="string">"welcome"</span>)</span><br><span class="line">console.<span class="built_in">log</span>(arr);// [<span class="string">"Hello"</span>, <span class="string">"h1144777"</span>, <span class="string">"welcome"</span>]</span><br></pre></td></tr></table></figure><br>  因為在JS中陣列(array)和物件(object)皆屬於 “參考型別(reference type)” &lt;=待學習,<br>  仍然指稱到的是同一個記憶體位置，同樣道理，如果使用的是物件(object)，一樣不會有錯誤<br>  的情形產生。</p><p>2.如果使用object literal( 大括號{} )的方式修改物件內容，對於JS引擎來說等於建立新物<br>件，也就是他會將這個物件存到另一個記憶體位置，就是這個常數的值改變了，就會出現錯誤訊息</p><p>物件部分:</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">const obj = &#123;</span><br><span class="line">    <span class="built_in">name</span>: <span class="string">"h1144777"</span></span><br><span class="line">&#125;</span><br><span class="line">console.<span class="built_in">log</span>(obj);  <span class="comment">// &#123;name:h1144777&#125;</span></span><br><span class="line"></span><br><span class="line">obj = &#123;</span><br><span class="line">    <span class="built_in">name</span>: <span class="string">"abcd"</span></span><br><span class="line">&#125;</span><br><span class="line">console.<span class="built_in">log</span>(obj);  <span class="comment">//錯誤</span></span><br></pre></td></tr></table></figure><p>陣列部分:</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">23</span>, <span class="number">24</span>, <span class="number">25</span>];</span><br><span class="line">console.log(arr);  <span class="comment">//[23, 24, 25]</span></span><br><span class="line"></span><br><span class="line">arr = [<span class="number">34</span>, <span class="number">35</span>, <span class="number">36</span>];</span><br><span class="line">console.log(arr);  <span class="comment">//錯誤</span></span><br></pre></td></tr></table></figure><h2 id="延伸觀念"><a href="#延伸觀念" class="headerlink" title="延伸觀念"></a>延伸觀念</h2><p>1.什麼是function scope<br>function scope指的是函式範圍，用var宣告變數後，被宣告的這個變數在此函式範圍內都有效，變數有效<br>範圍越大越難管控變數，也越有可能造成Bug</p><p>2.什麼是block scope<br>block scope為區塊範圍，使用let宣告變數或是用const宣告常數，被宣告的變數或常數僅在區塊範圍內有效，也就是僅在限定的{ }內有效。</p>]]></content>
      
      
      <categories>
          
          <category> 學習紀錄 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript ES6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>200213-加入Disqus留言板</title>
      <link href="/2020/02/13/200213-%E5%8A%A0%E5%85%A5Disqus%E7%95%99%E8%A8%80%E6%9D%BF/"/>
      <url>/2020/02/13/200213-%E5%8A%A0%E5%85%A5Disqus%E7%95%99%E8%A8%80%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<h2 id="參考網站"><a href="#參考網站" class="headerlink" title="參考網站:"></a>參考網站:</h2><a href="https://chenlifei.tech/posts/8838407/" target="_blank" rel="noopener">申請Disqus教學<a/><br/><a href="https://www.wpchen.net/zh/posts/disqus#_Disqus-4" target="_blank" rel="noopener">更改留言板語系<a/><a id="more"></a><p>1.進入Disqus官網申請帳號並設定shortname<br>2.開啟佈景主題Next內的_config.yml設定Disqus (主題內建)<br>3.找到Disqus.swig 並修改留言板語系</p>]]></content>
      
      
      <categories>
          
          <category> BLOG更新 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>200211-學習紀錄 函式的綁定物件this進階</title>
      <link href="/2020/02/11/200211-this%E9%80%B2%E9%9A%8E/"/>
      <url>/2020/02/11/200211-this%E9%80%B2%E9%9A%8E/</url>
      
        <content type="html"><![CDATA[<h2 id="參考網站"><a href="#參考網站" class="headerlink" title="參考網站:"></a>參考網站:</h2><a href="https://www.youtube.com/watch?v=NHliVGQef-4&list=PL-g0fdC5RMbpz9X__H5ycq1XcXxhfb5rk&index=16&t=411s" target="_blank" rel="noopener">JavaScript 網頁前端工程進階：函式的綁定物件 this - 進階篇</a><a id="more"></a><br/><br/><br/>函式呼叫1.基本呼叫:    函式名稱(參數資料)2.使用apply呼叫函式:    函式名稱.apply(綁定物件,[參數資料,...])3.使用call呼叫函式    函式名稱.call(綁定物件,參數資料...)    <p>this代表函式的”綁定物件”，通常在函式中使用<br>不同的程式碼脈絡下，”綁定函式”代表不同的東西</p><p>基礎:了解綁定物件在不同基本脈絡下的變化<br>情況一:獨立的函式<br>情況二:物件的方法<br>情況三:事件處理函式<br>情況四:建構函式</p><h1 id="進階-自訂的綁定物件"><a href="#進階-自訂的綁定物件" class="headerlink" title="進階:自訂的綁定物件"></a>進階:自訂的綁定物件</h1><hr><h2 id="使用-bind-重新綁定物件"><a href="#使用-bind-重新綁定物件" class="headerlink" title="使用 bind 重新綁定物件"></a>使用 bind 重新綁定物件</h2><pre><code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"綁定物件"</span>,<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line">test();      <span class="comment">//此時this綁定物件為window</span></span><br><span class="line"><span class="keyword">let</span> test2=test.bind(&#123;<span class="attr">x</span>:<span class="number">3</span>&#125;);</span><br><span class="line">test2();     <span class="comment">//重新綁定後舊物件會被覆蓋  此時this綁定物件為&#123;x:3&#125;  </span></span><br><span class="line"><span class="keyword">let</span> test3=test.bind(<span class="built_in">document</span>);</span><br><span class="line">test3();     <span class="comment">//重新綁定後舊物件會被覆蓋  此時this綁定物件為document</span></span><br></pre></td></tr></table></figure></code></pre><h2 id="使用-apply-呼叫函式，可自己設定綁定物件"><a href="#使用-apply-呼叫函式，可自己設定綁定物件" class="headerlink" title="使用 apply 呼叫函式，可自己設定綁定物件"></a>使用 apply 呼叫函式，可自己設定綁定物件</h2><pre><code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">n1, n2</span>)</span>&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(<span class="string">"結果"</span>, n1+n2);    <span class="comment">//結果7</span></span><br><span class="line">     <span class="built_in">console</span>.log(<span class="string">"綁定物件"</span>, <span class="keyword">this</span>);    <span class="comment">//綁定物件window</span></span><br><span class="line">&#125;</span><br><span class="line">add(<span class="number">3</span>,<span class="number">4</span>);    <span class="comment">//基本的函式呼叫，無法自己設定綁定物件</span></span><br><span class="line">add.apply(&#123;<span class="attr">y</span>:<span class="number">4</span>&#125;,[<span class="number">4</span>, <span class="number">5</span>]); <span class="comment">//&#123;y:4&#125;為綁定物件，[4, 5]為陣列，代表原來參數，4放到n1，5放到n2</span></span><br><span class="line">add.apply(<span class="built_in">document</span>, [<span class="number">5</span>, <span class="number">6</span>]);   <span class="comment">//綁定物件為document,n1為5,n2為6</span></span><br></pre></td></tr></table></figure></code></pre><h2 id="使用-call-呼叫函式，可自己設定綁定物件"><a href="#使用-call-呼叫函式，可自己設定綁定物件" class="headerlink" title="使用 call 呼叫函式，可自己設定綁定物件"></a>使用 call 呼叫函式，可自己設定綁定物件</h2><pre><code>//call與apply的差別在於給予參數部分 apply用陣列給予參數，call用傳統寫法給予參數add.call({z:10}, 3, 4);   //綁定物件為{z:10},n1為3,n2為4 </code></pre>]]></content>
      
      
      <categories>
          
          <category> 學習紀錄 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>200208-blog主題與設定</title>
      <link href="/2020/02/09/200208-blog%E4%B8%BB%E9%A1%8C%E8%88%87%E8%A8%AD%E5%AE%9A/"/>
      <url>/2020/02/09/200208-blog%E4%B8%BB%E9%A1%8C%E8%88%87%E8%A8%AD%E5%AE%9A/</url>
      
        <content type="html"><![CDATA[<h2 id="參考網站"><a href="#參考網站" class="headerlink" title="參考網站:"></a>參考網站:</h2><a href="https://theme-next.iissnan.com/" target="_blank" rel="noopener">1. Next主題</a><br/><a href="https://hsiangfeng.github.io/hexo/20190518/3303379172/" target="_blank" rel="noopener">2. Hexo Next 加入 FB 留言版</a><br/><a href="https://blog.niclin.tw/2019/01/05/%E5%A5%BD%E7%94%A8%E7%9A%84%E9%9A%B1%E7%A7%81%E6%AC%8A%E6%94%BF%E7%AD%96-url-%E8%87%AA%E5%8B%95%E7%94%9F%E6%88%90/" target="_blank" rel="noopener">3. 隱私權政策URL自動生成(申請FB SDK用)</a><a id="more"></a><br/><br/><br/><p>套用Hexo的主題”Next”<br>並修改主題內Config.yml的自訂設定</p><p>申請Facebook SDK<br>設定Facebook 留言板外掛</p>]]></content>
      
      
      <categories>
          
          <category> BLOG更新 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>200205-學習紀錄 函式的綁定物件this基礎</title>
      <link href="/2020/02/05/%E5%AD%B8%E7%BF%92%E7%B4%80%E9%8C%84/"/>
      <url>/2020/02/05/%E5%AD%B8%E7%BF%92%E7%B4%80%E9%8C%84/</url>
      
        <content type="html"><![CDATA[<h2 id="參考網站"><a href="#參考網站" class="headerlink" title="參考網站:"></a>參考網站:</h2><a href="https://www.youtube.com/watch?v=5Vi5idUkuyA&list=PL-g0fdC5RMbpz9X__H5ycq1XcXxhfb5rk&index=14" target="_blank" rel="noopener">1. 函式的綁定物件  this 基礎</a><br/><a href="https://pjchender.blogspot.com/2016/06/javascriptfunction-constructornew.html" target="_blank" rel="noopener">2. JavaScript 中的 function constructor 和關鍵字 new</a><a id="more"></a><br/><br/><br/><br/>this 代表函式的"綁定物件,通常在函式中使用    不同的程式碼脈絡下,綁定物件代表不同的東西<h2 id="情況一-獨立的函式"><a href="#情況一-獨立的函式" class="headerlink" title="情況一:獨立的函式"></a>情況一:獨立的函式</h2><pre><code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>); <span class="comment">//this就是 window 物件</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.innerWidth); <span class="comment">//印出視窗的寬度</span></span><br><span class="line">&#125;</span><br><span class="line">test();</span><br></pre></td></tr></table></figure></code></pre><h2 id="情況二-物件的方法"><a href="#情況二-物件的方法" class="headerlink" title="情況二:物件的方法"></a>情況二:物件的方法</h2><pre><code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj=&#123;</span><br><span class="line">    x:<span class="number">3</span>,</span><br><span class="line">    test:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>); <span class="comment">//this就是方法所屬的物件本身</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.x);<span class="comment">//印出物件的屬性 x</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">obj.test();</span><br></pre></td></tr></table></figure></code></pre><h2 id="情況三-事件處理函式"><a href="#情況三-事件處理函式" class="headerlink" title="情況三:事件處理函式"></a>情況三:事件處理函式</h2><pre><code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);  </span><br><span class="line">    <span class="comment">/*this 就是觸發事件的對象物件 </span></span><br><span class="line"><span class="comment">    例如在按鈕上註冊click物件 this就是代表那個按鈕 */</span></span><br><span class="line">    <span class="keyword">this</span>.body.innerHTML=<span class="string">"已點擊"</span>;  <span class="comment">//舉例用法 點擊網頁會跳出"已點擊" 文字</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></code></pre><h2 id="情況四-建構函式"><a href="#情況四-建構函式" class="headerlink" title="情況四:建構函式"></a>情況四:建構函式</h2><pre><code><figure class="highlight qml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">point</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>); </span><br><span class="line">    <span class="comment">/*this就是瀏覽器自動幫我們新建立好的空白物件 顯示為point&#123;&#125;*/</span></span><br><span class="line">    <span class="keyword">this</span>.x=<span class="number">3</span>;</span><br><span class="line">    <span class="keyword">this</span>.y=<span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> p1=<span class="keyword">new</span> <span class="built_in">point</span>();</span><br><span class="line"><span class="built_in">console</span>.log(p1); <span class="comment">//結果為point&#123;x:3,y:4&#125;</span></span><br></pre></td></tr></table></figure></code></pre>]]></content>
      
      
      <categories>
          
          <category> 學習紀錄 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
